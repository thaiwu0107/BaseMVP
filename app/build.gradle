apply plugin: 'com.android.application'
//apply plugin: 'com.frogermcs.androiddevmetrics'


android {

    configurations.all {
        resolutionStrategy.force 'com.google.code.findbugs:jsr305:1.3.9'
    }

    compileSdkVersion rootProject.ext.android["compileSdkVersion"]
    buildToolsVersion rootProject.ext.android["buildToolsVersion"]
    useLibrary 'org.apache.http.legacy'

    compileOptions {
        targetCompatibility JavaVersion.VERSION_1_8
        sourceCompatibility JavaVersion.VERSION_1_8
    }

    defaultConfig {
        applicationId "com.pattern.thai.mvpapplication"
        minSdkVersion rootProject.ext.android["minSdkVersion"]
        targetSdkVersion rootProject.ext.android["targetSdkVersion"]
        versionCode rootProject.ext.android["versionCode"]
        versionName rootProject.ext.android["versionName"]
        multiDexEnabled true

        testInstrumentationRunner rootProject.ext.dependencies["androidJUnitRunner"]

    }

    buildTypes {
        debug {
            buildConfigField "boolean", "LOG_DEBUG", "true"
            buildConfigField "boolean", "USE_CANARY", "true"
            minifyEnabled false
            proguardFiles getDefaultProguardFile('proguard-android.txt'), 'proguard-rules.pro'
        }

        release {
            buildConfigField "boolean", "LOG_DEBUG", "false"
            buildConfigField "boolean", "USE_CANARY", "false"
            minifyEnabled true
            shrinkResources true
            zipAlignEnabled true
            proguardFiles getDefaultProguardFile('proguard-android.txt'), 'proguard-rules.pro'
        }
    }

    lintOptions {
        disable 'InvalidPackage'
        disable "ResourceType"
        abortOnError false
    }
}

buildscript {
    repositories {
        jcenter()
    }
}

dependencies {
    compile fileTree(dir: 'libs', include: ['*.jar'])
    compile project(':arms')
    // Espresso UI Testing
    androidTestCompile rootProject.ext.dependencies["espresso-core"]
    androidTestCompile rootProject.ext.dependencies["espresso-contrib"]
    androidTestCompile rootProject.ext.dependencies["espresso-intents"]

    provided rootProject.ext.dependencies["javax.annotation"]//dagger2必须依赖jsr250 annotation
    annotationProcessor rootProject.ext.dependencies["dagger2-compiler"]//依赖apt插件
    annotationProcessor rootProject.ext.dependencies["butterknife-compiler"]
    annotationProcessor rootProject.ext.dependencies["rxCache"]
    compile rootProject.ext.dependencies["paginate"]
    compile rootProject.ext.dependencies["dagger2"]
    compile rootProject.ext.dependencies["support-v4"]
    compile rootProject.ext.dependencies["gson"]
    compile rootProject.ext.dependencies["appcompat-v7"]
    compile rootProject.ext.dependencies["autolayout"]
    compile rootProject.ext.dependencies["butterknife"]
    compile rootProject.ext.dependencies["androideventbus"]
    compile rootProject.ext.dependencies["sdp"]
    compile rootProject.ext.dependencies["RxSocialConnect"]
    compile rootProject.ext.dependencies["RxPaparazzo"]
    compile rootProject.ext.dependencies["rxerrorhandler2"]
    compile rootProject.ext.dependencies["rxpermissions2"]
    compile rootProject.ext.dependencies["rxcache2"]
    compile rootProject.ext.dependencies["rxlifecycle2-components"]
    compile rootProject.ext.dependencies["rxlifecycle2"]
    compile rootProject.ext.dependencies["rxjava2"]
    compile rootProject.ext.dependencies["rxandroid2"]
    compile rootProject.ext.dependencies["multitype"]
    compile rootProject.ext.dependencies["sdp"]
    compile rootProject.ext.dependencies["paginate"]
    compile rootProject.ext.dependencies["nineoldandroids"]
    compile rootProject.ext.dependencies["numberprogressbar"]
    compile rootProject.ext.dependencies["photoview"]
    compile rootProject.ext.dependencies["pickerview"]
    compile rootProject.ext.dependencies["butterknife"]
    compile rootProject.ext.dependencies["okhttp-urlconnection"]
    compile rootProject.ext.dependencies["okhttp3"]
    compile rootProject.ext.dependencies["retrofit-adapter-rxjava2"]
    compile rootProject.ext.dependencies["retrofit-converter-gson"]
    compile rootProject.ext.dependencies["retrofit"]
    compile rootProject.ext.dependencies["recyclerview-v7"]
    compile rootProject.ext.dependencies["annotations"]
    compile rootProject.ext.dependencies["cardview-v7"]
    compile rootProject.ext.dependencies["design"]
    compile rootProject.ext.dependencies["utilcode"]
    compile rootProject.ext.dependencies["guava"]

    debugCompile rootProject.ext.dependencies["canary-debug"]
    releaseCompile rootProject.ext.dependencies["canary-release"]
    testCompile rootProject.ext.dependencies["canary-release"]

    // Dependencies for local unit tests
    testCompile rootProject.ext.dependencies["junit"]
    testCompile rootProject.ext.dependencies["mockito-core"]

    // Android Testing Support Library's runner and rules
    androidTestCompile rootProject.ext.dependencies["runner"]

    // Dependencies for Android unit tests
    androidTestCompile rootProject.ext.dependencies["junit"]
    androidTestCompile rootProject.ext.dependencies["mockito-core"]
    androidTestCompile rootProject.ext.dependencies["annotations"]
    androidTestCompile rootProject.ext.dependencies["support-v4"]
    androidTestCompile rootProject.ext.dependencies["recyclerview-v7"]
    androidTestCompile rootProject.ext.dependencies["appcompat-v7"]
    androidTestCompile rootProject.ext.dependencies["design"]
    androidTestCompile rootProject.ext.dependencies["multitypeadapter"]
}
